package vista;


import controlador.CrearXML;
import controlador.LectorCSV;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Alumne;

/**
 *
 * @author acoromina
 */
public class Generadordellistats extends javax.swing.JFrame {
    
    private TreeMap<String, TreeSet<Alumne>> ttsMateries;
    
    /**
     * Creates new form Prova
     */
    private String seleccionarRutaArxiu(){
        String infoCarpeta = "";
        
        // Obrir un JFileChooser on només la selecció de carpeta sigui possible
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int seleccio = fileChooser.showSaveDialog(this);
        
        if(seleccio == JFileChooser.APPROVE_OPTION){
            infoCarpeta = fileChooser.getSelectedFile().getAbsolutePath();
        }
        
        if(seleccio == JFileChooser.CANCEL_OPTION){
            infoCarpeta = null;
        }
        
        return infoCarpeta;
    }
    
    public Generadordellistats() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        btnExaminarArxiu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Llistamateries = new javax.swing.JList();
        btnGenerarXML = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtRutaArxiu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MnuItemSortir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador de llistats");
        setResizable(false);

        btnExaminarArxiu.setText("Examinar");
        btnExaminarArxiu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExaminarArxiuActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Llistamateries);

        btnGenerarXML.setText("Generar llistes");
        btnGenerarXML.setEnabled(false);
        btnGenerarXML.setPreferredSize(new java.awt.Dimension(140, 25));
        btnGenerarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarXMLActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel1.setText("Indica el fitxer que conté les dades a tractar:");

        txtRutaArxiu.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel2.setText("Selecciona les matèries de les quals vols generar llistes:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jMenu1.setText("Arxiu");

        MnuItemSortir.setText("Sortir");
        MnuItemSortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuItemSortirActionPerformed(evt);
            }
        });
        jMenu1.add(MnuItemSortir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGenerarXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRutaArxiu, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnExaminarArxiu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRutaArxiu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExaminarArxiu))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGenerarXML, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExaminarArxiuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExaminarArxiuActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        // Implementar el filtre per arxius CSV
        FileFilter filtro = new FileNameExtensionFilter("Fitxer separat per comes (.csv)", "csv");
        fileChooser.setFileFilter(filtro);
        int seleccion = fileChooser.showOpenDialog(this);
        
        // Si la selecció de l'arxiu és correcte
        if(seleccion == JFileChooser.APPROVE_OPTION){
            // Apuntar el nom de l'arxiu al JTextField
            txtRutaArxiu.setText(fileChooser.getSelectedFile().getName());
            
            // Comprovar que l'arxiu tingui la extensió .csv
            if(!fileChooser.getSelectedFile().getName().endsWith(".csv")){
                JOptionPane.showMessageDialog(this, "No has obert un fitxer .cvs", "Fitxer erroni", JOptionPane.OK_OPTION);
            } else {
                LectorCSV csv = new LectorCSV(fileChooser.getSelectedFile().getAbsolutePath());
                ttsMateries = csv.obtenirInformacioCSV();
                // Comprovar que el CSV sigui el correcte
                if(ttsMateries != null){
                    // Recorrer cada materia i assignar-la a un DefaultListModel
                    Set<Map.Entry<String, TreeSet<Alumne>>> clauValor =  ttsMateries.entrySet();
                    Iterator<Map.Entry<String, TreeSet<Alumne>>> it = clauValor.iterator();
                    
                    Map.Entry<String, TreeSet<Alumne>> entrada;
                    DefaultListModel model = new DefaultListModel();

                     while(it.hasNext()){
                        entrada = it.next();
                        model.addElement(entrada.getKey());
                     }
                     // Instanciar el DefaultListModel a la JList (llista de materies del CSV)
                     Llistamateries.setModel(model);
                     btnGenerarXML.setEnabled(true);
                     
                } else{
                    JOptionPane.showMessageDialog(this, "No es el fitxer que s'esperava", "Fitxer equivocat", JOptionPane.ERROR_MESSAGE);
                }
                
            }
        }
        
        if(seleccion == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(this, "Acció cancel·lada", "Informació", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExaminarArxiuActionPerformed

    private void btnGenerarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarXMLActionPerformed
        // Demanar la carpeta on es guardarà i el nom de l'arxiu
        String infoRutaArxiu = seleccionarRutaArxiu();
        
        if(infoRutaArxiu != null){
            // Agafar els elements seleccionats de la llista
            List<String> seleccionats = Llistamateries.getSelectedValuesList();
            System.out.println(infoRutaArxiu);
            // Comprovar que l'usuari hagi escrit el ".xml" i crear l'XML
            if(infoRutaArxiu.contains(".xml")){  
                if(new CrearXML(ttsMateries, seleccionats).generarArxiu(infoRutaArxiu)){
                    try {
                        JOptionPane.showMessageDialog(this, "Document XML generat correctament", "Informació", JOptionPane.INFORMATION_MESSAGE);
                        // Obrir el programa predeterminat dels sistema operatiu
                        Desktop.getDesktop().open(new File(infoRutaArxiu));
                    } catch (IOException ex) {
                        Logger.getLogger(Generadordellistats.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error al generar el document XML", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                infoRutaArxiu += ".xml";
                if(new CrearXML(ttsMateries, seleccionats).generarArxiu(infoRutaArxiu)){
                    try {
                        JOptionPane.showMessageDialog(this, "Document XML generat correctament", "Informació", JOptionPane.INFORMATION_MESSAGE);
                        // Obrir el programa predeterminat dels sistema operatiu
                        Desktop.getDesktop().open(new File(infoRutaArxiu));
                    } catch (IOException ex) {
                        Logger.getLogger(Generadordellistats.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error al generar el document XML, selecciona alguna materia", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Generació del llistat de materies cancel·lada", "Acció cancel·lada", JOptionPane.INFORMATION_MESSAGE);
        }
            
    }//GEN-LAST:event_btnGenerarXMLActionPerformed

    private void MnuItemSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuItemSortirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MnuItemSortirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generadordellistats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generadordellistats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generadordellistats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generadordellistats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Generadordellistats gll = new Generadordellistats();
                gll.setLocationRelativeTo(null);
                gll.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList Llistamateries;
    private javax.swing.JMenuItem MnuItemSortir;
    private javax.swing.JButton btnExaminarArxiu;
    private javax.swing.JButton btnGenerarXML;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtRutaArxiu;
    // End of variables declaration//GEN-END:variables
}
